{"version":3,"sources":["redux/table-reducer.ts","components/ResultTable/ResultTableRow/ResultTableRow.tsx","svg/btn_delete.svg","components/ResultTable/ResultTable.tsx","common/scrollToElement/scrollToElement.js","components/ResultTable/ResultTables.tsx","redux/table-selectors.ts","components/ResultTable/ResultTablesContainer.tsx","components/Form/AddEditFormField.tsx","components/Form/AddEditForm.tsx","common/customValidate/customValidate.js","components/Form/AddEditFormContainer.tsx","App.js","serviceWorker.js","components/ScrollToTop/ScrollToTop.jsx","redux/redux-store.ts","index.js"],"names":["initialState","tableData","id","rows","name","surname","age","city","tableRowData","tableHeadCellsNames","firstTableId","tableBlockRef","nextTable","firstTableRef","formFields","label","type","yupObject","yup","required","min","trim","round","positive","typeError","matches","message","excludeEmptyString","tablesData","state","action","getTableIndex","tableId","findIndex","table","Object","assign","values","Date","now","map","find","rowData","length","row","rowId","undefined","tableRef","tableIndex","slice","filter","item","ResultTableRow","props","rowRef","React","useRef","ActionButtons","text","onClick","editTableRow","current","classList","add","setTimeout","deleteTableRow","button","index","Button","variant","size","className","key","ref","data-label","_extends","target","i","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","d","transform","_ref","svgRef","title","width","height","viewBox","ForwardRef","forwardRef","ResultTable","TableHeadCells","cell","useEffect","saveFirstTableRef","copyTable","element","elementHeight","offsetHeight","style","deleteTable","Table","bordered","hover","tableRowsData","scrollToElement","scrollSuccess","smoothScroll","polyfill","Element","scrollIntoViewPromise","options","scrollIntoView","parent","then","x","intersectionObserver","IntersectionObserver","entries","isIntersecting","unobserve","observe","behavior","block","ResultTables","nextElementSibling","window","scrollTo","top","left","ResultTablesContainer","connect","dispatch","copyTableAC","deleteTableAC","editTableRowAC","deleteTableRowAC","scrollResult","saveFirstTableRefAC","AddEditFormField","input","meta","useState","hasValue","setHasValue","value","clearTimeout","handleFieldClassName","Form","Group","controlId","Control","isInvalid","touched","error","isValid","Label","Feedback","AddEditForm","pristine","submitting","handleSubmit","method","onSubmit","formField","Field","component","addEdit","disabled","customValidate","schema","shape","fromEntries","Promise","resolve","reject","validate","abortEarly","catch","errors","reduxFormErrors","inner","forEach","path","addFormData","addFormDataAC","editFormData","editFormDataAC","initialValues","ReduxForm","reduxForm","form","enableReinitialize","destroyOnUnmount","asyncValidate","formData","App","Boolean","location","hostname","match","ScrollToTop","hideOnScroll","setHideOnScroll","useScrollPosition","position","pageYOffset","addEventListener","passive","removeEventListener","Fragment","reducers","combineReducers","formReducer","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.84aa9a13.chunk.js","sourcesContent":["import * as yup from \"yup\"\r\nimport {FormFieldsType, TableDataType, TableRowDataType, TableRowType} from \"../types/types\";\r\nimport { ThunkAction } from 'redux-thunk'\r\nimport {AppStateType} from \"./redux-store\";\r\nimport React from \"react\";\r\n\r\nconst COPY_TABLE = 'COPY-TABLE'\r\nconst DELETE_TABLE = 'DELETE-TABLE'\r\nconst ADD_FORM_DATA = 'ADD-FORM-DATA'\r\nconst EDIT_FORM_DATA = 'EDIT-FORM-DATA'\r\nconst EDIT_TABLE_ROW = 'EDIT-TABLE-ROW'\r\nconst DELETE_TABLE_ROW = 'DELETE-TABLE-ROW'\r\nconst SCROLL_SUCCESS = 'SCROLL-SUCCESS'\r\nconst SAVE_FIRST_TABLE_REF = 'SAVE-FIRST-TABLE-REF'\r\nconst CLEAR_TABLE_ROW = 'CLEAR_TABLE_ROW'\r\n\r\nconst capitalizeCheck = /^[\\p{Lu}]/gu\r\n\r\ntype InitialStateType = {\r\n\ttableData: Array<TableDataType>\r\n\ttableRowData: TableRowDataType\r\n\ttableHeadCellsNames: Array<string>\r\n\tfirstTableId: number\r\n\ttableBlockRef: React.RefObject<HTMLTableElement>\r\n\tnextTable: boolean\r\n\tfirstTableRef: React.RefObject<HTMLTableElement>\r\n\tformFields: Array<FormFieldsType>\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n\ttableData: [\r\n\t\t{\r\n\t\t\tid: 1,\r\n\t\t\trows: [\r\n\t\t\t\t{id: 1, name: 'John', surname: 'Doe', age: 36, city: 'London'},\r\n\t\t\t\t{id: 2, name: 'Mark', surname: 'Otto', age: 38, city: 'Berlin'},\r\n\t\t\t\t{id: 3, name: 'Kirk', surname: 'Douglas', age: 88, city: 'L.A.'},\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 2,\r\n\t\t\trows: [\r\n\t\t\t\t{id: 1, name: 'John2', surname: 'Doe2', age: 36, city: 'London2'},\r\n\t\t\t\t{id: 2, name: 'Mark2', surname: 'Otto2', age: 38, city: 'Berlin2'},\r\n\t\t\t\t{id: 3, name: 'Kirk2', surname: 'Douglas2', age: 88, city: 'L.A.2'},\r\n\t\t\t]\r\n\t\t}\r\n\t],\r\n\ttableRowData: {} as TableRowDataType,\r\n\ttableHeadCellsNames: [\r\n\t\t'Name',\r\n\t\t'Surname',\r\n\t\t'Age',\r\n\t\t'City'\r\n\t],\r\n\tfirstTableId: 1,\r\n\ttableBlockRef: {} as React.RefObject<HTMLTableElement>,\r\n\tnextTable: false,\r\n\tfirstTableRef: {} as React.RefObject<HTMLTableElement>,\r\n\tformFields: [\r\n\t\t{\r\n\t\t\tlabel: 'Name',\r\n\t\t\tname: 'name',\r\n\t\t\ttype: 'text',\r\n\t\t\tyupObject: (yup.string().required('Name is required').min(2, 'Name must be at least 2 characters').trim())\r\n\t\t},\r\n\t\t{\r\n\t\t\tlabel: 'Surname',\r\n\t\t\tname: 'surname',\r\n\t\t\ttype: 'text',\r\n\t\t\tyupObject: (yup.string().required('Surname is required').min(2, 'Surname must be at least 2 characters').trim())\r\n\t\t},\r\n\t\t{\r\n\t\t\tlabel: 'Age',\r\n\t\t\tname: 'age',\r\n\t\t\ttype: 'number',\r\n\t\t\tyupObject: (yup.number().required('Age is required').round('round').positive('Age must be greater than 0').typeError('Age is required'))\r\n\t\t},\r\n\t\t{\r\n\t\t\tlabel: 'City',\r\n\t\t\tname: 'city',\r\n\t\t\ttype: 'text',\r\n\t\t\tyupObject: (yup.string().matches(capitalizeCheck, {\r\n\t\t\t\tmessage: 'The first letter must be capitalized',\r\n\t\t\t\texcludeEmptyString: true\r\n\t\t\t}).required('City is required').trim().min(2, 'City must be at least 2 characters'))\r\n\t\t}\r\n\t],\r\n}\r\n\r\nconst tablesData = (state = initialState, action: TableDataActionTypes): InitialStateType => {\r\n\r\n\tconst getTableIndex = (tableId: number) => {\r\n\t\treturn state.tableData.findIndex(table => table.id === tableId)\r\n\t}\r\n\r\n\tswitch (action.type) {\r\n\r\n\t\tcase ADD_FORM_DATA:\r\n\t\t\tObject.assign(action.values, {id: Date.now()})\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttableData: [\r\n\t\t\t\t\t...state.tableData.map(table =>\r\n\t\t\t\t\t\ttable.id === state.firstTableId ? {\r\n\t\t\t\t\t\t\t\t...table,\r\n\t\t\t\t\t\t\t\trows: [\r\n\t\t\t\t\t\t\t\t\t...table.rows,\r\n\t\t\t\t\t\t\t\t\taction.values as TableRowType\r\n\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t: table\r\n\t\t\t\t\t),\r\n\t\t\t\t],\r\n\t\t\t\ttableBlockRef: state.firstTableRef,\r\n\t\t\t\tnextTable: false\r\n\t\t\t}\r\n\r\n\t\tcase EDIT_TABLE_ROW:\r\n\t\t\tlet tableData: TableDataType | undefined = state.tableData.find(table => table.id === action.tableId)\r\n\r\n\t\t\tlet rowData = (tableData && tableData.rows.length) ? tableData.rows.find(row => row.id === action.rowId) : undefined\r\n\r\n\t\t\tif (rowData && rowData.id) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\ttableRowData: {\r\n\t\t\t\t\t\trow: rowData,\r\n\t\t\t\t\t\trowId: action.rowId,\r\n\t\t\t\t\t\ttableId: action.tableId,\r\n\t\t\t\t\t\ttableRef: action.tableRef\r\n\t\t\t\t\t},\r\n\t\t\t\t\ttableBlockRef: {} as React.RefObject<HTMLTableElement>\r\n\t\t\t\t}\r\n\t\t\t} else  {\r\n\t\t\t\treturn state\r\n\t\t\t}\r\n\r\n\t\tcase EDIT_FORM_DATA:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttableBlockRef: action.tableRowData.tableRef,\r\n\t\t\t\tnextTable: false,\r\n\t\t\t\ttableData: [\r\n\t\t\t\t\t...state.tableData.map(table =>\r\n\t\t\t\t\t\ttable.id === action.tableRowData.tableId ? {\r\n\t\t\t\t\t\t\t...table,\r\n\t\t\t\t\t\t\trows: table.rows.map(row =>\r\n\t\t\t\t\t\t\t\trow.id === action.values.id ? action.values : row\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t} : table\r\n\t\t\t\t\t)\r\n\t\t\t\t]\r\n\t\t\t}\r\n\r\n\t\tcase COPY_TABLE:\r\n\t\t\tlet tableIndex = getTableIndex(action.tableId)\r\n\t\t\tlet table = {...state.tableData[tableIndex]}\r\n\t\t\ttable.id = Date.now()\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttableData: [\r\n\t\t\t\t\t...state.tableData.slice(0, tableIndex + 1),\r\n\t\t\t\t\ttable,\r\n\t\t\t\t\t...state.tableData.slice(tableIndex + 1)\r\n\t\t\t\t],\r\n\t\t\t\ttableBlockRef: action.tableRef,\r\n\t\t\t\tnextTable: true\r\n\t\t\t}\r\n\r\n\t\tcase DELETE_TABLE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttableData: state.tableData.filter(item =>\r\n\t\t\t\t\titem.id !== action.tableId\r\n\t\t\t\t)\r\n\t\t\t}\r\n\r\n\t\tcase DELETE_TABLE_ROW:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttableData: [\r\n\t\t\t\t\t...state.tableData.map(table =>\r\n\t\t\t\t\t\ttable.id === action.tableId ? {\r\n\t\t\t\t\t\t\t...table,\r\n\t\t\t\t\t\t\trows: table.rows.filter(row =>\r\n\t\t\t\t\t\t\t\trow.id !== action.rowId\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t} : table\r\n\t\t\t\t\t)\r\n\t\t\t\t],\r\n\t\t\t}\r\n\r\n\t\tcase SCROLL_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttableBlockRef: {} as React.RefObject<HTMLTableElement>,\r\n\t\t\t\tnextTable: false,\r\n\t\t\t}\r\n\r\n\t\tcase SAVE_FIRST_TABLE_REF:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tfirstTableRef: action.tableRef\r\n\t\t\t}\r\n\r\n\t\tcase CLEAR_TABLE_ROW:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttableRowData: {} as TableRowDataType\r\n\t\t\t}\r\n\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\ntype TableDataActionTypes =\r\n\tAddFormDataACType\r\n\t| EditFormDataACType\r\n\t| DeleteTableRowACType\r\n\t| EditTableRowACType\r\n\t| CopyTableACType\r\n\t| DeleteTableACType\r\n\t| ScrollSuccessACType\r\n\t| SaveFirstTableRefACType\r\n\t| ClearTableRowACType\r\n\r\ntype AddFormDataACType = {\r\n\ttype: typeof ADD_FORM_DATA\r\n\tvalues: Omit<TableRowType, \"id\">\r\n}\r\nconst addFormDataAC = (values: Omit<TableRowType, \"id\">): AddFormDataACType => ({\r\n\ttype: ADD_FORM_DATA,\r\n\tvalues: values\r\n})\r\n\r\ntype EditFormDataACType = {\r\n\ttype: typeof EDIT_FORM_DATA\r\n\ttableRowData: TableRowDataType\r\n\tvalues: TableRowType\r\n}\r\nconst editFormDataAC = (values: TableRowType, tableRowData: TableRowDataType): EditFormDataACType => ({\r\n\ttype: EDIT_FORM_DATA,\r\n\ttableRowData: tableRowData,\r\n\tvalues: values\r\n})\r\n\r\ntype DeleteTableRowACType = {\r\n\ttype: typeof DELETE_TABLE_ROW\r\n\ttableId: number\r\n\trowId: number\r\n}\r\nconst deleteTableRowAC = (tableId: number, rowId: number): DeleteTableRowACType => ({\r\n\ttype: DELETE_TABLE_ROW,\r\n\ttableId: tableId,\r\n\trowId: rowId\r\n})\r\n\r\ntype EditTableRowACType = {\r\n\ttype: typeof EDIT_TABLE_ROW\r\n\ttableId: number\r\n\trowId: number\r\n\ttableRef: React.RefObject<HTMLTableElement>\r\n}\r\nconst editTableRowAC = (tableId: number, rowId: number, tableRef: React.RefObject<HTMLTableElement>): EditTableRowACType => ({\r\n\ttype: EDIT_TABLE_ROW,\r\n\ttableId: tableId,\r\n\trowId: rowId,\r\n\ttableRef: tableRef\r\n})\r\n\r\ntype CopyTableACType = {\r\n\ttype: typeof COPY_TABLE\r\n\ttableId: number\r\n\ttableRef: React.RefObject<HTMLTableElement>\r\n}\r\nconst copyTableAC = (tableId: number, tableRef: React.RefObject<HTMLTableElement>): CopyTableACType => ({\r\n\ttype: COPY_TABLE,\r\n\ttableId: tableId,\r\n\ttableRef: tableRef\r\n})\r\n\r\ntype DeleteTableACType = {\r\n\ttype: typeof DELETE_TABLE\r\n\ttableId: number\r\n}\r\nconst deleteTableAC = (tableId: number): DeleteTableACType => ({\r\n\ttype: DELETE_TABLE,\r\n\ttableId: tableId\r\n})\r\n\r\ntype ScrollSuccessACType = {\r\n\ttype: typeof SCROLL_SUCCESS\r\n}\r\nconst scrollSuccessAC = (): ScrollSuccessACType => ({\r\n\ttype: SCROLL_SUCCESS\r\n})\r\n\r\ntype SaveFirstTableRefACType = {\r\n\ttype: typeof SAVE_FIRST_TABLE_REF\r\n\ttableRef: React.RefObject<HTMLTableElement>\r\n}\r\nconst saveFirstTableRefAC = (tableRef: React.RefObject<HTMLTableElement>): SaveFirstTableRefACType => ({\r\n\ttype: SAVE_FIRST_TABLE_REF,\r\n\ttableRef: tableRef\r\n})\r\n\r\ntype ClearTableRowACType = {\r\n\ttype: typeof CLEAR_TABLE_ROW\r\n}\r\nconst clearTableRowAC = (): ClearTableRowACType => ({\r\n\ttype: CLEAR_TABLE_ROW\r\n})\r\n\r\n\r\ntype ThunkType = ThunkAction<void, AppStateType, unknown, TableDataActionTypes>\r\n\r\nexport const copyTable = (tableId: number, tableRef: React.RefObject<HTMLTableElement>): ThunkType => (dispatch) => {\r\n\tdispatch(copyTableAC(tableId, tableRef))\r\n\tdispatch(clearTableRowAC())\r\n}\r\n\r\nexport const deleteTable = (tableId: number): ThunkType => (dispatch) => {\r\n\tdispatch(deleteTableAC(tableId))\r\n\tdispatch(clearTableRowAC())\r\n}\r\n\r\nexport const editTableRow = (tableId: number, rowId: number, tableRef: React.RefObject<HTMLTableElement>): ThunkType => (dispatch) => {\r\n\tdispatch(editTableRowAC(tableId, rowId, tableRef))\r\n}\r\n\r\nexport const deleteTableRow = (tableId: number, rowId: number): ThunkType => (dispatch) => {\r\n\tdispatch(deleteTableRowAC(tableId, rowId))\r\n\tdispatch(clearTableRowAC())\r\n}\r\nexport const scrollSuccess = (scrollResult: boolean): ThunkType => (dispatch) => {\r\n\tif (scrollResult) {\r\n\t\tdispatch(scrollSuccessAC())\r\n\t\tdispatch(clearTableRowAC())\r\n\t}\r\n}\r\nexport const saveFirstTableRef = (tableRef: React.RefObject<HTMLTableElement>): ThunkType => (dispatch) => {\r\n\tdispatch(saveFirstTableRefAC(tableRef))\r\n}\r\nexport const addFormData = (values: Omit<TableRowType, \"id\">): ThunkType => (dispatch) => {\r\n\tdispatch(addFormDataAC(values))\r\n\tdispatch(clearTableRowAC())\r\n}\r\nexport const editFormData = (values: TableRowType, tableRowData: TableRowDataType): ThunkType => (dispatch) => {\r\n\tdispatch(editFormDataAC(values, tableRowData))\r\n\tdispatch(clearTableRowAC())\r\n}\r\n\r\nexport default tablesData\r\n","import React from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\nimport {TableRowDataType, TableRowType} from \"../../../types/types\";\r\n\r\ntype PropsType = {\r\n\ttableId: number\r\n\trowData: TableRowType\r\n\ttableRowData: TableRowDataType\r\n\ttableRef: React.RefObject<HTMLTableElement>\r\n\r\n\teditTableRow: (tableId: number, rowId: number, tableRef: React.RefObject<HTMLTableElement>) => void\r\n\tdeleteTableRow: (tableId: number, rowId: number) => void\r\n}\r\n\r\nconst ResultTableRow: React.FC<PropsType> = (props) => {\r\n\r\n\tconst rowRef: React.RefObject<HTMLTableRowElement> = React.useRef(null)\r\n\r\n\tconst handleDeleteRow = () => {\r\n\t\t// Adding class for animation\r\n\t\tif (rowRef.current) {\r\n\t\t\trowRef.current.classList.add(\"closing\")\r\n\t\t}\r\n\t\tsetTimeout(() => {\r\n\t\t\tprops.deleteTableRow(props.tableId, props.rowData.id)\r\n\t\t}, 250)\r\n\t}\r\n\r\n\tconst handleEditRow = () => {\r\n\t\tprops.editTableRow(props.tableId, props.rowData.id, props.tableRef)\r\n\t}\r\n\r\n\tconst buttonsData = [\r\n\t\t{\r\n\t\t\taction: 'edit',\r\n\t\t\ttext: 'Edit',\r\n\t\t\tonClick: () => {handleEditRow()}\r\n\t\t},\r\n\t\t{\r\n\t\t\taction: 'delete',\r\n\t\t\ttext: 'Delete',\r\n\t\t\tonClick: () => {handleDeleteRow()}\r\n\t\t},\r\n\t]\r\n\r\n\tconst ActionButtons = buttonsData.map( (button, index) =>\r\n\t\t<Button\r\n\t\t\tvariant=\"link\"\r\n\t\t\tsize=\"sm\"\r\n\t\t\tclassName={\"res-table__\" + button.action}\r\n\t\t\tkey={index}\r\n\t\t\tonClick={button.onClick}\r\n\t\t>\r\n\t\t\t{button.text}\r\n\t\t</Button>\r\n\t)\r\n\treturn (\r\n\t\t<tr\r\n\t\t\tclassName=\"res-table__tr\"\r\n\t\t\tref={rowRef}\r\n\t\t>\r\n\t\t\t<td className=\"res-table__td\" data-label=\"Name :\">\r\n\t\t\t\t<span className=\"res-table__data\">{props.rowData.name}</span>\r\n\t\t\t</td>\r\n\t\t\t<td className=\"res-table__td\" data-label=\"Surname :\">\r\n\t\t\t\t<span className=\"res-table__data\">{props.rowData.surname}</span>\r\n\t\t\t</td>\r\n\t\t\t<td className=\"res-table__td\" data-label=\"Age :\">\r\n\t\t\t\t<span className=\"res-table__data\">{props.rowData.age}</span>\r\n\t\t\t</td>\r\n\t\t\t<td className=\"res-table__td\" data-label=\"City :\">\r\n\t\t\t\t<span className=\"res-table__data\">{props.rowData.city}</span>\r\n\t\t\t</td>\r\n\t\t\t<td className=\"res-table__td res-table__td_flex\" data-label=\"&nbsp;\">\r\n\t\t\t\t<span className=\"d-flex justify-content-around flex-grow-1 res-table__data\">\r\n\t\t\t\t\t{ActionButtons}\r\n\t\t\t\t</span>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t)\r\n}\r\n\r\nexport default ResultTableRow","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M623.246,435.991l3.377-3.378a1.278,1.278,0,0,0,0-1.8l-0.45-.45a1.276,1.276,0,0,0-1.8,0l-3.378,3.378-3.377-3.378a1.278,1.278,0,0,0-1.8,0l-0.451.45a1.278,1.278,0,0,0,0,1.8l3.377,3.377-3.377,3.378a1.278,1.278,0,0,0,0,1.8l0.451,0.45a1.278,1.278,0,0,0,1.8,0l3.377-3.377,3.378,3.377a1.278,1.278,0,0,0,1.8,0l0.45-.45a1.278,1.278,0,0,0,0-1.8Z\",\n  transform: \"translate(-615 -430)\"\n});\n\nvar SvgBtnDelete = function SvgBtnDelete(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 12,\n    height: 12,\n    viewBox: \"0 0 12 12\",\n    className: \"svg__cls-1\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgBtnDelete, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/btn_delete.d8d764de.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react'\r\nimport Table from 'react-bootstrap/Table'\r\nimport './ResultTable.scss'\r\nimport ResultTableRow from \"./ResultTableRow/ResultTableRow\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport {ReactComponent as RemoveButton} from \"../../svg/btn_delete.svg\"\r\nimport {\r\n\tTableMapDispatchPropsType, TableMapStatePropsType,\r\n\tTableRowType,\r\n} from \"../../types/types\";\r\n\r\ntype ResultTablePropsType = {\r\n\ttableId: number\r\n\ttableRowsData: Array<TableRowType>\r\n}\r\n\r\ntype PropsType = TableMapStatePropsType & TableMapDispatchPropsType & ResultTablePropsType\r\n\r\nconst ResultTable: React.FC<PropsType> = (props) => {\r\n\r\n\tconst tableRef: React.RefObject<HTMLTableElement> = React.useRef(null)\r\n\r\n\tconst TableHeadCells = props.tableHeadCellsNames.map(\r\n\t\t(cell, index) => <td className=\"res-table__td res-table__td_head\" key={index}>{cell}</td>\r\n\t)\r\n\r\n\tconst handleCopyTable = () => {\r\n\t\tprops.copyTable(props.tableId, tableRef)\r\n\t}\r\n\r\n\tconst handleDeleteTable = () => {\r\n\t\tconst element = tableRef.current\r\n\r\n\t\tif (element) {\r\n\t\t\tconst elementHeight = element.offsetHeight\r\n\t\t\telement.style.height = elementHeight + 'px'\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\telement.classList.add(\"closing\")\r\n\t\t\t}, 5)\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tprops.deleteTable(props.tableId)\r\n\t\t\t}, 250)\r\n\t\t}\r\n\t}\r\n\r\n\tconst saveFirstTableRef = () => {\r\n\t\tif (props.tableId === props.firstTableId) {\r\n\t\t\tprops.saveFirstTableRef(tableRef)\r\n\t\t}\r\n\t}\r\n\r\n\tReact.useEffect(saveFirstTableRef)\r\n\r\n\treturn (\r\n\t\t<div className=\"table-block\" ref={tableRef}>\r\n\t\t\t<div className=\"copy-tables\">\r\n\t\t\t\t<Button\r\n\t\t\t\t\tvariant=\"primary\"\r\n\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\tclassName=\"copy-tables__copy\"\r\n\t\t\t\t\tonClick={handleCopyTable}\r\n\t\t\t\t>\r\n\t\t\t\t\tCopy table\r\n\t\t\t\t</Button>\r\n\t\t\t\t{props.tableId !== props.firstTableId ? (\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant=\"borderless\"\r\n\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\tclassName=\"mx-3 px-1 copy-tables__remove\"\r\n\t\t\t\t\t\tonClick={handleDeleteTable}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<span className=\"sr-only\">Remove table</span>\r\n\t\t\t\t\t\t<RemoveButton/>\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t) : ''}\r\n\t\t\t</div>\r\n\t\t\t<Table bordered hover className=\"res-table\">\r\n\t\t\t\t<thead className=\"res-table__thead\">\r\n\t\t\t\t<tr className=\"res-table__tr res-table__tr_head\">\r\n\t\t\t\t\t{TableHeadCells}\r\n\t\t\t\t\t<td className=\"res-table__td res-table__td_head\">&nbsp;</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody className=\"res-table__tbody\">\r\n\t\t\t\t{props.tableRowsData.map((row) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<ResultTableRow\r\n\t\t\t\t\t\t\tkey={row.id}\r\n\t\t\t\t\t\t\ttableId={props.tableId}\r\n\t\t\t\t\t\t\trowData={row}\r\n\t\t\t\t\t\t\ttableRowData={props.tableRowData}\r\n\t\t\t\t\t\t\tdeleteTableRow={props.deleteTableRow}\r\n\t\t\t\t\t\t\teditTableRow={props.editTableRow}\r\n\t\t\t\t\t\t\ttableRef={tableRef}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)\r\n\t\t\t\t})}\r\n\t\t\t\t</tbody>\r\n\t\t\t</Table>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ResultTable","import smoothScroll from 'smoothscroll-polyfill'\r\n\r\nconst scrollToElement = (element, scrollSuccess) => {\r\n\r\n\tsmoothScroll.polyfill()\r\n\r\n\tElement.prototype.scrollIntoViewPromise = function (options) {\r\n\t\tthis.scrollIntoView(options)\r\n\t\tlet parent = this\r\n\t\treturn {\r\n\t\t\tthen: function (x) {\r\n\t\t\t\tconst intersectionObserver = new IntersectionObserver((entries) => {\r\n\t\t\t\t\tlet [entry] = entries\r\n\t\t\t\t\tif (entry.isIntersecting) {\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tx()\r\n\t\t\t\t\t\t\tintersectionObserver.unobserve(parent)\r\n\t\t\t\t\t\t}, 100)\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tintersectionObserver.observe(parent)\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\tsetTimeout(() => {\r\n\t\telement.scrollIntoViewPromise({behavior: 'smooth', block: 'start'})\r\n\t\t\t.then(() => {\r\n\t\t\t\tscrollSuccess(true)\r\n\t\t\t})\r\n\t}, 100)\r\n}\r\n\r\nexport default scrollToElement","import React from 'react'\r\nimport ResultTable from \"./ResultTable\"\r\nimport scrollToElement from \"../../common/scrollToElement/scrollToElement\"\r\nimport {ResultTablesMapDispatchPropsType, ResultTablesMapStatePropsType} from \"../../types/types\";\r\n\r\ntype PropsType = ResultTablesMapStatePropsType & ResultTablesMapDispatchPropsType\r\n\r\nconst ResultTables: React.FC<PropsType> = (props) => {\r\n\r\n\tconst scrollTo = () => {\r\n\t\tif (props.tableBlockRef.current && props.nextTable) {\r\n\t\t\tscrollToElement(props.tableBlockRef.current.nextElementSibling, props.scrollSuccess)\r\n\t\t} else if (props.tableBlockRef && props.tableBlockRef.current) {\r\n\t\t\tscrollToElement(props.tableBlockRef.current, props.scrollSuccess)\r\n\t\t} else if (Object.keys(props.tableRowData).length) {\r\n\t\t\twindow.scrollTo({top: 0, left: 0, behavior: 'smooth'})\r\n\t\t}\r\n\t}\r\n\r\n\tReact.useEffect(() => {\r\n\t\tscrollTo()\r\n\t})\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t{props.tableData.map(table =>\r\n\t\t\t<ResultTable\r\n\t\t\t\ttableRowsData={table.rows}\r\n\t\t\t\tkey={table.id}\r\n\t\t\t\ttableId={table.id}\r\n\t\t\t\tfirstTableId={props.firstTableId}\r\n\t\t\t\ttableHeadCellsNames={props.tableHeadCellsNames}\r\n\t\t\t\tcopyTable={props.copyTable}\r\n\t\t\t\tdeleteTable={props.deleteTable}\r\n\t\t\t\tdeleteTableRow={props.deleteTableRow}\r\n\t\t\t\teditTableRow={props.editTableRow}\r\n\t\t\t\ttableRowData={props.tableRowData}\r\n\t\t\t\tsaveFirstTableRef={props.saveFirstTableRef}\r\n\t\t\t/>\r\n\t\t)}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default ResultTables","import {AppStateType} from \"./redux-store\";\r\n\r\nexport const tableRowData = (state: AppStateType) => {\r\n\treturn state.tablesData.tableRowData\r\n}\r\n\r\nexport const formFields = (state: AppStateType) => {\r\n\treturn state.tablesData.formFields\r\n}\r\n\r\nexport const tableData = (state: AppStateType) => {\r\n\treturn state.tablesData.tableData\r\n}\r\n\r\nexport const firstTableId = (state: AppStateType) => {\r\n\treturn state.tablesData.firstTableId\r\n}\r\n\r\nexport const tableHeadCellsNames = (state: AppStateType) => {\r\n\treturn state.tablesData.tableHeadCellsNames\r\n}\r\n\r\nexport const tableBlockRef = (state: AppStateType) => {\r\n\treturn state.tablesData.tableBlockRef\r\n}\r\n\r\nexport const nextTable = (state: AppStateType) => {\r\n\treturn state.tablesData.nextTable\r\n}\r\n","import {\r\n\tcopyTable,\r\n\tdeleteTable,\r\n\teditTableRow,\r\n\tdeleteTableRow,\r\n\tscrollSuccess,\r\n\tsaveFirstTableRef,\r\n} from \"../../redux/table-reducer\"\r\nimport {connect} from \"react-redux\"\r\nimport ResultTables from \"./ResultTables\"\r\nimport {firstTableId, tableHeadCellsNames, nextTable, tableBlockRef, tableData, tableRowData} from \"../../redux/table-selectors\"\r\nimport {AppStateType} from \"../../redux/redux-store\"\r\nimport {ResultTablesMapDispatchPropsType, ResultTablesMapStatePropsType} from \"../../types/types\"\r\n\r\nconst mapStateToProps = (state: AppStateType): ResultTablesMapStatePropsType => {\r\n\treturn {\r\n\t\ttableData: tableData(state),\r\n\t\ttableRowData: tableRowData(state),\r\n\t\tfirstTableId: firstTableId(state),\r\n\t\ttableHeadCellsNames: tableHeadCellsNames(state),\r\n\t\ttableBlockRef: tableBlockRef(state),\r\n\t\tnextTable: nextTable(state)\r\n\t}\r\n}\r\n\r\nconst ResultTablesContainer = connect<ResultTablesMapStatePropsType, ResultTablesMapDispatchPropsType, {}, AppStateType>(mapStateToProps, {\r\n\tcopyTable,\r\n\tdeleteTable,\r\n\teditTableRow,\r\n\tdeleteTableRow,\r\n\tscrollSuccess,\r\n\tsaveFirstTableRef\r\n})(ResultTables)\r\n\r\nexport default ResultTablesContainer\r\n","import React from \"react\";\r\nimport Form from 'react-bootstrap/Form'\r\nimport {WrappedFieldProps} from \"redux-form\";\r\n\r\ntype PropsType = {\r\n\ttype: string\r\n\tlabel: string\r\n}\r\n\r\nconst AddEditFormField: React.FC<PropsType & WrappedFieldProps> = ({input, meta, ...props}) => {\r\n\r\n\tconst [hasValue, setHasValue] = React.useState<string>('')\r\n\r\n\tconst handleFieldClassName = () => {\r\n\t\tif (input.value) {\r\n\t\t\tsetTimeout(() => setHasValue(' has-value'), 25)\r\n\t\t\treturn () => clearTimeout()\r\n\t\t} else {\r\n\t\t\tsetHasValue('')\r\n\t\t}\r\n\t}\r\n\r\n\tReact.useEffect(\r\n\t\t() => {\r\n\t\t\thandleFieldClassName()\r\n\t\t}\r\n\t)\r\n\r\n\treturn (\r\n\t\t\t<Form.Group controlId={input.name} className=\"add-form__group\">\r\n\t\t\t\t<Form.Control\r\n\t\t\t\t\ttype={props.type}\r\n\t\t\t\t\tclassName={`add-form__input ${hasValue}`}\r\n\t\t\t\t\tsize=\"lg\"\r\n\t\t\t\t\tisInvalid={!!(meta.touched && meta.error)}\r\n\t\t\t\t\tisValid={meta.touched && !meta.error}\r\n\t\t\t\t\t{...input}\r\n\t\t\t\t/>\r\n\t\t\t\t<Form.Label className=\"add-form__label\">{props.label}</Form.Label>\r\n\t\t\t\t<Form.Control.Feedback type=\"invalid\" className=\"add-form__invalid\">\r\n\t\t\t\t\t<span className=\"add-form__message\">{meta.error}</span>\r\n\t\t\t\t</Form.Control.Feedback>\r\n\t\t\t</Form.Group>\r\n\t)\r\n}\r\n\r\nexport default AddEditFormField","import React from \"react\"\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport './AddEditForm.scss'\r\nimport AddEditFormField from \"./AddEditFormField\"\r\nimport {Field, InjectedFormProps} from \"redux-form\";\r\nimport {FormFieldsType, FormPropsType, TableRowType} from \"../../types/types\";\r\n\r\ntype AddEditForm = {\r\n\tformFields: Array<FormFieldsType>\r\n\taddEdit: number\r\n}\r\n\r\ntype PropsType = AddEditForm\r\n\r\nconst AddEditForm: React.FC<InjectedFormProps<TableRowType, FormPropsType> & PropsType> = (props) => {\r\n\r\n\tconst {pristine, submitting, handleSubmit} = props;\r\n\treturn (\r\n\t\t<Form\r\n\t\t\tclassName=\"add-form form\"\r\n\t\t\tmethod=\"post\"\r\n\t\t\tonSubmit={handleSubmit}\r\n\t\t>\r\n\t\t\t{/* Render form fields from formFields array*/}\r\n\t\t\t{props.formFields.map(formField => {\r\n\t\t\t\treturn <Field\r\n\t\t\t\t\tcomponent={AddEditFormField}\r\n\t\t\t\t\tkey={formField.name}\r\n\t\t\t\t\tname={formField.name}\r\n\t\t\t\t\ttype={formField.type}\r\n\t\t\t\t\tlabel={formField.label}\r\n\t\t\t\t/>\r\n\t\t\t})}\r\n\t\t\t<Button\r\n\t\t\t\ttype=\"submit\"\r\n\t\t\t\tvariant={props.addEdit ? \"info\" : \"primary\"}\r\n\t\t\t\tclassName=\"add-form__submit text-uppercase btn-block btn-lg\"\r\n\t\t\t\tdisabled={pristine || submitting}\r\n\t\t\t>\r\n\t\t\t\t{props.addEdit ? \"Edit\" : \"Add\"}\r\n\t\t\t</Button>\r\n\t\t</Form>\r\n\t)\r\n}\r\n\r\nexport default AddEditForm","import * as yup from \"yup\";\r\n\r\nconst customValidate = formFields => values => {\r\n\r\n\tconst schema = yup.object().shape(Object.fromEntries(\r\n\t\tformFields.map(item => [item.name, item.yupObject])\r\n\t))\r\n\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tschema.validate(values, {abortEarly: false})\r\n\t\t\t.then(() => {\r\n\t\t\t\tresolve()\r\n\t\t\t})\r\n\t\t\t.catch(errors => {\r\n\t\t\t\tlet reduxFormErrors = {}\r\n\t\t\t\terrors.inner.forEach(error => {\r\n\t\t\t\t\treduxFormErrors[error.path] = error.message\r\n\t\t\t\t})\r\n\t\t\t\treject(reduxFormErrors)\r\n\t\t\t})\r\n\t})\r\n\r\n}\r\n\r\nexport default customValidate","import {\r\n\taddFormData,\r\n\teditFormData,\r\n} from \"../../redux/table-reducer\"\r\nimport {connect} from \"react-redux\"\r\nimport AddEditForm from \"./AddEditForm\"\r\nimport customValidate from \"../../common/customValidate/customValidate\"\r\nimport {reduxForm} from \"redux-form\"\r\nimport React from \"react\"\r\nimport {formFields, tableRowData} from \"../../redux/table-selectors\";\r\nimport {\r\n\tAddEditFormMapDispatchPropsType,\r\n\tAddEditFormMapStatePropsType,\r\n\tFormPropsType,\r\n\tTableRowType\r\n} from \"../../types/types\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\n\r\ntype PropsType = AddEditFormMapStatePropsType & AddEditFormMapDispatchPropsType\r\n\r\nconst AddEditFormContainer: React.FC<PropsType> = (props) => {\r\n\r\n\tconst onSubmit = (formData: TableRowType) => {\r\n\t\tif (formData.id) {\r\n\t\t\tprops.editFormData(formData, props.tableRowData)\r\n\t\t} else {\r\n\t\t\tprops.addFormData(formData)\r\n\t\t}\r\n\t}\r\n\r\n\tconst initialValues:TableRowType | {}  = Object.keys(props.tableRowData).length ? props.tableRowData.row : {}\r\n\r\n\t// Checking what the status of the form is: adding data or editing\r\n\tconst addEdit: number = Object.keys(props.tableRowData).length && props.tableRowData.tableId\r\n\r\n\tconst ReduxForm = reduxForm<TableRowType, FormPropsType>({\r\n\t\tform: 'addEditForm',\r\n\t\tenableReinitialize : true,\r\n\t\tdestroyOnUnmount: false,\r\n\t\tinitialValues: initialValues,\r\n\t\tasyncValidate: customValidate(props.formFields)\r\n\t})(AddEditForm)\r\n\r\n\treturn (\r\n\t\t<ReduxForm\r\n\t\t\tformFields={props.formFields}\r\n\t\t\taddEdit={addEdit}\r\n\t\t\tonSubmit={onSubmit}\r\n\t\t/>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): AddEditFormMapStatePropsType => {\r\n\treturn {\r\n\t\ttableRowData: tableRowData(state),\r\n\t\tformFields: formFields(state),\r\n\t}\r\n}\r\n\r\nexport default connect<AddEditFormMapStatePropsType, AddEditFormMapDispatchPropsType, {}, AppStateType>(mapStateToProps, {\r\n\taddFormData,\r\n\teditFormData\r\n})(AddEditFormContainer)\r\n","import React from \"react\";\nimport ResultTablesContainer from \"./components/ResultTable/ResultTablesContainer\";\nimport AddEditFormContainer from \"./components/Form/AddEditFormContainer\";\n\nconst App = () => {\n\n\treturn (\n\t\t<div className=\"container container_app\">\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"col-md-6\">\n\t\t\t\t\t<AddEditFormContainer />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"mt-6\">\n\t\t\t\t<ResultTablesContainer/>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport './ScrollToTop.scss'\n\nconst ScrollToTop = () => {\n\n\tconst [hideOnScroll, setHideOnScroll] = React.useState('d-none' )\n\n\tconst handleScrollToTop = () => {\n\t\twindow.scrollTo({ top: 0, left: 0, behavior: 'smooth' });\n\t}\n\n\tconst useScrollPosition = () => {\n\t\tlet position = window.pageYOffset\n\t\tif (position > 10 && position < 150) {\n\t\t\tsetHideOnScroll('')\n\t\t} else if (position > 150) {\n\t\t\tsetHideOnScroll('show')\n\t\t} else {\n\t\t\tsetHideOnScroll('d-none')\n\t\t}\n\t}\n\n\tReact.useEffect(() => {\n\t\twindow.addEventListener('scroll', useScrollPosition, { passive: true })\n\n\t\treturn () => {\n\t\t\twindow.removeEventListener('scroll', useScrollPosition)\n\t\t}\n\t}, [])\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\tclassName={hideOnScroll + ' scroll-top'}\n\t\t\t\tonClick={handleScrollToTop}\n\t\t\t>\n\t\t\t\t<span className=\"sr-only\">Scroll to top</span>\n\t\t\t</button>\n\t\t</React.Fragment>\n\t);\n}\n\nexport default ScrollToTop\n","import {applyMiddleware, combineReducers, createStore} from \"redux\"\r\nimport tablesData from \"./table-reducer\"\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport thunkMiddleware from \"redux-thunk\"\r\n\r\nlet reducers = combineReducers({\r\n\ttablesData: tablesData,\r\n\tform: formReducer\r\n})\r\n\r\nexport type AppStateType = ReturnType<typeof reducers>\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware))\r\n\r\n// @ts-ignore\r\nwindow.store = store\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './scss/index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport ScrollToTop from \"./components/ScrollToTop/ScrollToTop\";\nimport store from \"./redux/redux-store\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<App/>\n\t\t</Provider>\n\t\t<ScrollToTop/>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}